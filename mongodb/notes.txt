create

use command is used for switching into/creating a new database

use data_name

database

collections

db.createCollection("collection_name")

document

db.collection.insertOne({name: "person1", phone: 9766696550, age: 23, address: "nagpur"})

show collections
show dbs

db.students.insertOne(
    {
        _id: 3,
        name: "student3",
        phone : 8237895726,
        age : 23,
        address: {
            street: "plot 4, sharda layout",
            city: "nagpur",
            pincode: "440024",
            state: "Maharashtra"
        }
    }
) 

db -> ecommerce website

customers

db.customers.insertMany([
    { _id: 1, name: "amey khondekar", phone: "9766696550", address: "sakkaradhara" },
    { _id: 2, name: "Mrunal Ghotekar", phone: "8857032120", address: "Dighori" },
    { _id: 3, name: "Sahil Kumar", phone: "8237895726", address: "Manewada" }
])

products

db.products.insertMany([
    {_id:11, name : "pencil", stock: 100, selling_price : 20, discont: 5},
    {_id:12, name : "pen", stock: 100, selling_price : 30, discont: 5},
    {_id:13, name : "200 Pages Book", stock: 100, selling_price : 45, discont: 5},
    {_id:14, name : "Marker", stock: 100, selling_price : 35, discont: 5}
])

orders

db.orders.insertOne({
    _id: 42, 
    boughtBy: {customerId: 1},
    products:[
        {productId: 11, qty: 2, subTotal : 95},
        {productId: 14, qty: 1, subTotal : 97.5}
    ],
    shipingAddress: {
        street: "plot 4, sharda layout",
        city: "nagpur",
        pincode: "440024",
        state: "Maharashtra"
    },
    timeStamp: Date.now()
})

read

db.collection.findOne() -> null / object
db.collection.find() -> [] / [object/s]

query

{}-> un conditionally -> everthing

{ field: "match something" }

comparision oprators

$gt - greater than
$gte - greater than equals
$lt - less than
$lte - less than equals
$in - for range
$nin - not in range
$eq - equals
$ne - not equals

{ age : {$lt : 20} }

db.products.find({selling_price: {$nin: [20, 35]}})
[
  { _id: 12, name: 'pen', stock: 100, selling_price: 30, discont: 5 },
  {
    _id: 13,
    name: '200 Pages Book',
    stock: 100,
    selling_price: 45,
    discont: 5
  }
]

db.products.find({selling_price: {$in: [20, 35]}})
[
  {
    _id: 11,
    name: 'pencil',
    stock: 100,
    selling_price: 20,
    discont: 5
  },
  {
    _id: 14,
    name: 'Marker',
    stock: 100,
    selling_price: 35,
    discont: 5
  }
]


logical oprators

$and
$or
$nor
$not

db.products.find({ $or :[ {selling_price:  20} , {selling_price : {$gte:35}} ]})

find({query},{projection}).count()
find({query},{projection}).limit(number)
find({query},{projection}).sort({field: -1(decending)/1(Ascending)}))